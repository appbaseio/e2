{
    "data": {
        "markdownRemark": {
            "html": "<p>This article is a part of the series on <a href=\"https://appbaseio.gitbooks.io/esc/content/searchbar/introduction.html\"><strong>how to build a search bar</strong></a>.</p>\n<h2 id=\"how-to-make-a-normal-search-bar\"><a href=\"#how-to-make-a-normal-search-bar\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How to make a normal search bar</h2>\n<p>This chapter compiles what we learnt so far in the series to implement a searchbar query and UI using Elasticsearch.</p>\n<p>The main functionalities that we will need for doing this are:</p>\n<ol>\n<li><strong>Auto complete</strong> - While user types, we need to provide auto-completion for the input queries. Auto-complete functionality should be as fast as a user types to provide instant feedback relevant to what a user has already typed in.  Elasticsearch provides a convenient way to get autocomplete up and running quickly with its completion suggester feature.</li>\n<li><strong>Suggestions</strong>(or full text search) - Use quick suggestions to help users save time, iterate on their searches, and get the results they want. It helps to show the relevant data to user inputs.</li>\n<li><strong>UI</strong> - For building the UI, we will use a React components library that provides us the scaffolding for the UI where we can inject the Elasticsearch query.</li>\n</ol>\n<p><code>Note:</code> You can deep dive into the implementation details of the above two functionalities through these chapters - <a href=\"https://github.com/appbaseio/esc/blob/master/searchbar/auto-complete.md\">Auto Completion</a> and <a href=\"https://github.com/appbaseio/esc/blob/master/searchbar/suggestions.md\">Suggestions</a>.</p>\n<h2 id=\"defining-mappings\"><a href=\"#defining-mappings\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Defining Mappings</h2>\n<p>If you have worked with a SQL database system before, you are probably familiar with the idea of a schema. Elasticsearch’s equivalent of a schema definition is a mapping.</p>\n<p>In this section, we will specify the mappings for our two fields: city and country, with the necessary settings to enable auto-complete and suggestion functionalities.</p>\n<p><code>auto-suggest</code> analyzer will be useful to get the suggestions. For the auto completion we will use the <code>simple</code> analyzer that tokenizes the text as is (i.e. no white space splitting) and applies a lowercase filter.</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"gatsby-code-jsxon\"><code>curl -XPUT $host/normal_searchbar/_settings?pretty -d '{\n  \"analysis\": {\n    \"tokenizer\": {\n      \"ngramizer\": {\n        \"type\": \"ngram\",\n        \"min_gram\": 1,\n        \"max_gram\": 10,\n        \"token_chars\": [\n          \"letter\",\n          \"digit\",\n          \"punctuation\",\n          \"symbol\"\n        ]\n      }\n  },\n    \"analyzer\": {\n      \"auto-suggest\": {\n        \"type\": \"custom\",\n        \"tokenizer\": \"ngramizer\",\n        \"filter\": [\n          \"lowercase\",\n          \"asciifolding\"\n        ]\n      }\n    }\n  }\n}'</code></pre>\n      </div>\n<p>We just added a custom analyzers. The <code>_settings</code> endpoint can be used for adding one or more custom analyzers.</p>\n<h2 id=\"defining-mappings-1\"><a href=\"#defining-mappings-1\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Defining Mappings</h2>\n<p>Here we will use two fields and two subfields each of these fields. These subfields are useful to store the same data in a different manner. <code>city</code> field is useful to index the cities with the default analyzer of Elasticsearch.</p>\n<p><code>city_autocomplete</code> subfield is useful for the auto-completion feature. It indexes and searches the data using <code>simple</code> analyzer and with type <strong>completion</strong>.</p>\n<p><code>city_autocomplete</code> subfield is useful for the auto-suggestion feature. It indexes the data using <code>auto-suggest</code> analyzer, searches the data using <code>simple</code> analyzer and is of type <strong>text</strong>.</p>\n<p>Similar sub-field structure will also hold true for the country field.</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"gatsby-code-jsxon\"><code>curl -XPUT $host/normal_searchbar/_mapping/searchbar -d '{\n  \"searchbar\": {\n    \"properties\": {\n      \"city\": {\n        \"type\": \"text\",\n        \"fields\": {\n          \"city_autocomplete\": {\n            \"type\": \"completion\",\n            \"analyzer\": \"simple\",\n            \"search_analyzer\": \"simple\"\n          },\n          \"city_autosuggest\": {\n            \"type\": \"text\",\n            \"analyzer\": \"auto-suggest\",\n            \"search_analyzer\": \"simple\"\n          }\n        }\n      },\n      \"country\": {\n        \"type\": \"text\",\n        \"fields\": {\n          \"country_autocomplete\": {\n            \"type\": \"completion\",\n            \"analyzer\": \"simple\",\n            \"search_analyzer\": \"simple\"\n          },\n          \"country_autosuggest\": {\n            \"type\": \"text\",\n            \"analyzer\": \"auto-suggest\",\n            \"search_analyzer\": \"simple\"\n          }\n        }\n      }\n    }\n  }\n}'</code></pre>\n      </div>\n<h3 id=\"data-indexing\"><a href=\"#data-indexing\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Data Indexing</h3>\n<p>As you can see, while indexing the data, we only need to insert the city and country fields.</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"gatsby-code-jsxon\"><code>curl -XPUT $host/normal_searchbar/searchbar/1 -d '{\n  \"city\": \"New York\",\n  \"country\": \"United States\"\n}'</code></pre>\n      </div>\n<h3 id=\"data-browser-view\"><a href=\"#data-browser-view\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Data Browser View</h3>\n<p>For accessibility, we have indexed ~15,000 data points that can be viewed in the data browser <a href=\"https://opensource.appbase.io/dejavu/live/#?input_state=XQAAAALvAAAAAAAAAAA9iIqnY-B2BnTZGEQz6wkFslF8ZMg7A6kGLFGPADbJVmb5ysVqinQQuiFLkb4deUgCDkj3Ca7c1o_y8XA0-MkniaJtriPLcO0sOs-he9RgZSsY1-Dj7M1oUHcSMXEdlL__k05smSCpzBnTIbIxXMyoFoHyy8Z_g-Ku8eQnTdtXdsrQgMg_wmz9OmY-26TdzjLWp-v2Wf1WiRDeMXYvBl1QvLH_j_iLGk7AkFU5rmsqyCR3BmLVt2baZT9KRDsA_8PvEAA&#x26;editable=false\">here. <img src=\"https://i.imgur.com/rHOEixS.png\"></a>.</p>\n<h3 id=\"query\"><a href=\"#query\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Query</h3>\n<p>Next, we will move to the queries section. Here, we will be using the match query for getting the dropdown suggestions and will be using the <strong>completion</strong> suggester query for getting the autocomplete suggestions. Let’s first query on the <code>city</code> field.</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"gatsby-code-jsxon\"><code>curl \"$host/normal_searchbar/searchbar/_search?pretty\" -d '{\n  \"query\": {\n    \"match\": {\n      \"city.city_autosuggest\": \"New\"\n    }\n  },\n  \"suggest\": {\n    \"city-suggest\": {\n      \"text\": \"New\",\n      \"completion\": {\n        \"field\": \"city.city_autocomplete\"\n      }\n    }\n  }\n}'</code></pre>\n      </div>\n<h5 id=\"response\"><a href=\"#response\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Response</h5>\n<div class=\"gatsby-highlight\">\n      <pre class=\"gatsby-code-jsxon\"><code>{\n  \"took\" : 18,\n  \"timed_out\" : false,\n  \"_shards\" : {\n    \"total\" : 1,\n    \"successful\" : 1,\n    \"failed\" : 0\n  },\n  \"hits\" : {\n    \"total\" : 2,\n    \"max_score\" : 2.6197505,\n    \"hits\" : [ {\n      \"_index\" : \"normal_searchbar\",\n      \"_type\" : \"searchbar\",\n      \"_id\" : \"AVsMYRgYhvsk2FETcMug\",\n      \"_score\" : 2.6197505,\n      \"_source\" : {\n        \"city\" : \"New York\",\n        \"country\" : \"United States\"\n      }\n    }, {\n      \"_index\" : \"normal_searchbar\",\n      \"_type\" : \"searchbar\",\n      \"_id\" : \"AVsMYTTkhvsk2FETcNLo\",\n      \"_score\" : 2.6197505,\n      \"_source\" : {\n        \"city\" : \"New Farm\",\n        \"country\" : \"Australia\"\n      }\n    }]\n  },\n  \"suggest\" : {\n    \"city-suggest\" : [ {\n      \"text\" : \"New\",\n      \"offset\" : 0,\n      \"length\" : 3,\n      \"options\" : [ {\n        \"text\" : \"Newport\",\n        \"score\" : 5.0\n      }, {\n        \"text\" : \"Newmarket\",\n        \"score\" : 2.0\n      } ]\n    } ]\n  }\n}</code></pre>\n      </div>\n<h6 id=\"note-there-is-some-overlap-between-the-autocompletion-and-autosuggestion-feature-heres-why-we-make-two-separate-queries\"><a href=\"#note-there-is-some-overlap-between-the-autocompletion-and-autosuggestion-feature-heres-why-we-make-two-separate-queries\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Note: There is some overlap between the autocompletion and autosuggestion feature, here’s why we make two separate queries.</h6>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Autocompletion</th>\n<th align=\"left\">Autosuggestion</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">Uses the suggest query and completion mapping type.</td>\n<td align=\"left\">Uses the match query with a n-gram based indexing analyzer.</td>\n</tr>\n<tr>\n<td align=\"left\">Only offers suggestions that match from the beginning of the search query, e.g. “Yor” will return “York” but now “New York”.</td>\n<td align=\"left\">Offers hits that contains the search query, it doesn’t necessarily need to start with the query. e.g. “Yor” may also return “New York” in the matching result.</td>\n</tr>\n<tr>\n<td align=\"left\">Since autocompletion doesn’t tokenize the word, the suggest query here works on words of most practical lengths.</td>\n<td align=\"left\">Since we rely on n-grams here, the search’s usability is limited to the max token length - 10 in our example.</td>\n</tr>\n<tr>\n<td align=\"left\">Autocompletion’s storage is more efficient because it doesn’t breakdown the words into overlapping tokens.</td>\n<td align=\"left\">The longer the n-gram token length, the storage requirements increase quadratically.</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"query-on-both-city-and-country\"><a href=\"#query-on-both-city-and-country\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Query on both City and Country</h4>\n<div class=\"gatsby-highlight\">\n      <pre class=\"gatsby-code-jsxon\"><code>curl \"$host/normal_searchbar/searchbar/_search?pretty\" -d '{\n  \"query\": {\n     \"multi_match\": {\n        \"query\": \"New\",\n        \"fields\": [\"city.city_autosuggest\", \"country.country_autosuggest\"]\n    }\n  },\n  \"suggest\": {\n    \"city-suggest\": {\n      \"text\": \"New\",\n      \"completion\": {\n        \"field\": \"city.city_autocomplete\"\n      }\n    },\n    \"country-suggest\": {\n      \"text\": \"New\",\n      \"completion\": {\n        \"field\": \"country.country_autocomplete\"\n      }\n    }\n  }       \n}'</code></pre>\n      </div>\n<h3 id=\"query-response\"><a href=\"#query-response\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Query Response</h3>\n<div class=\"gatsby-highlight\">\n      <pre class=\"gatsby-code-jsxon\"><code>{\n  \"took\" : 15,\n  \"timed_out\" : false,\n  \"_shards\" : {\n    \"total\" : 1,\n    \"successful\" : 1,\n    \"failed\" : 0\n  },\n  \"hits\" : {\n    \"total\" : 2,\n    \"max_score\" : 1.7185925,\n    \"hits\" : [ {\n      \"_index\" : \"normal_searchbar\",\n      \"_type\" : \"searchbar\",\n      \"_id\" : \"AVsMYRgYhvsk2FETcMug\",\n      \"_score\" : 1.7185925,\n      \"_source\" : {\n        \"city\" : \"New York\",\n        \"country\" : \"United States\"\n      }\n    }, {\n      \"_index\" : \"normal_searchbar\",\n      \"_type\" : \"searchbar\",\n      \"_id\" : \"AVsMYTTkhvsk2FETcNLo\",\n      \"_score\" : 1.7185925,\n      \"_source\" : {\n        \"city\" : \"New Farm\",\n        \"country\" : \"Australia\"\n      }\n    } ]\n  },\n  \"suggest\" : {\n    \"country-suggest\" : [ {\n      \"text\" : \"New\",\n      \"offset\" : 0,\n      \"length\" : 3,\n      \"options\" : [ ]\n    } ],\n    \"city-suggest\" : [ {\n      \"text\" : \"New\",\n      \"offset\" : 0,\n      \"length\" : 3,\n      \"options\" : [ {\n        \"text\" : \"Newport\",\n        \"score\" : 5.0\n      }, {\n        \"text\" : \"Newmarket\",\n        \"score\" : 2.0\n      } ]\n    } ]\n  }\n}</code></pre>\n      </div>\n<h3 id=\"implementing-the-searchbar-with-a-ui\"><a href=\"#implementing-the-searchbar-with-a-ui\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Implementing the searchbar with a UI</h3>\n<p>// TODO</p>",
            "frontmatter": {
                "title": "Searchbar",
                "next": null,
                "prev": "suggestions.html",
                "nextTitle": null,
                "prevTitle": "Suggestions"
            },
            "fields": {
                "path": "docs/searchbar/searchbar.md",
                "slug": "searchbar/searchbar.html"
            }
        }
    },
    "pathContext": {
        "slug": "searchbar/searchbar.html"
    }
}